<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Initialize
base_w = 640;
base_h = 480;
width = base_w;
height = base_h;
rate = 0.1;
zoom = 1;
overview = false;
focus = false;

if (!view_enabled)
{
    view_object[0] = o_ship;
    view_hborder[0] = view_wview[0] / 2;
    view_vborder[0] = view_hview[0] / 2;
    view_visible[0] = true;
    view_enabled = true;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="2">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Rescale
var max_w = display_get_width(), max_h = display_get_height(),
    aspect = ternary(window_get_fullscreen(), max_w / max_h, base_w / base_h);
// camera
width = ternary(aspect &gt; 1, min(base_w, max_w), height * aspect);
height = ternary(aspect &gt; 1, min(base_h, max_h), width / aspect);
// gui
display_set_gui_size(width, height);
// surface
surface_resize(application_surface, width, height);
// view
view_wview[0] = floor(width * zoom);
view_hview[0] = floor(height * zoom);
view_wport[0] = max_w;
view_hport[0] = max_h;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="64">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/// Debug Info
if (global.debug)
{
    var info = "Camera: " + string(vw) + "x" + string(vh)
        + "#View: " + string(view_wview[0]) + "x" + string(view_hview[0])
        + "#Port: " + string(view_wport[0]) + "x" + string(view_hport[0]);
        
    draw_set_halign(fa_center);
    draw_text_colour(vw / 2, 16, info, c_white, c_white, c_white, c_white, 0.75);
    draw_set_halign(-1);
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
